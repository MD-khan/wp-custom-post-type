<?php 
/**
 * @package BOSTONPIZZA_CUSTOM_POST_TYPE
 * 
 */

class Bostonpizza_Custom_Posttype
{

	public $custom_post_types = array();
	
	public function __construct() 
	{
		#Custom post types
		$this->define_custom_post_types();
		if( !empty( $this->custom_post_types ) ) {
			add_action('init', array($this, 'register_custom_post_types') );
		}
	}	
	
	public function define_custom_post_types(){
		
		$this->custom_post_types[] = array(
			'post_type'             => __('Pizza','bostonpizza'),
			'name'                  => _x( 'Pizzas', 'bostonpizza' ),
			'singular_name'         => _x( 'Pizza', 'post type singular name', 'bostonpizza' ),
			'menu_name'             => _x( 'Pizzas', 'admin menu', 'bostonpizza' ),
			'name_admin_bar'        => _x( 'Pizzas', 'add new on admin bar', 'bostonpizza' ),
			'archives'              => __( 'Archives Pizzas:', 'bostonpizza' ),
			'attributes'            => '',
			'parent_item_colon'     => __( 'Parent Pizzas:', 'bostonpizza' ),
			'all_items'             => __( 'All Pizzas', 'bostonpizza' ),
			'add_new_item'          => '',
			'add_new'               => _x( 'Add New', 'book', 'bostonpizza' ),
			'new_item'              => __( 'Add New Pizza', 'bostonpizza' ),
			'edit_item'             => __( 'Edit Pizzas', 'bostonpizza' ),
			'update_item'           => __( 'Update Pizzas', 'bostonpizza' ),
			'view_item'             => __( 'View Pizzas', 'bostonpizza' ),
			'view_items'            => '',
			'search_items'          => __( 'Search Pizzas', 'bostonpizza' ),
			'not_found'             => __( 'No Pizzas found.', 'bostonpizza' ),
			'not_found_in_trash'    => __( 'No Pizzas found in Trash.', 'bostonpizza' ),
			'featured_image'        => '',
			'set_featured_image'    => '',
			'remove_featured_image' => '',
			'use_featured_image'    => '',
			'insert_into_item'      => '',
			'uploaded_to_this_item' => '',
			'items_list'            => '',
			'items_list_navigation' => '',
			'filter_items_list'     => '',
			'label'                 => '',
			'description'           => __( 'Description.', 'bostonpizza' ),
			'supports'              => array( 'title', 'editor', 'thumbnail' ),
			'taxonomies'            => array( 'category' ),
			'hierarchical'          => false,
			'public'                => true,
			'show_ui'               => true,
			'show_in_menu'          => true,
            'menu_position'         => 5,
            'menu_icon'             => 'dashicons-food',
			'show_in_admin_bar'     => true,
			'show_in_nav_menus'     => true,
			'can_export'            => true,
			'has_archive'           => true,
			'exclude_from_search'   => false,
            'publicly_queryable'    => true,
            'query_var'             => true,
            'rewrite'               => array( 'slug' => 'pizza' ),
			'capability_type'       => 'post'
		);
	}
	
	
	public function register_custom_post_types() {

		foreach ($this->custom_post_types as $post_type) {
			register_post_type( $post_type['post_type'],
				array(
					'labels' => array(
						'name'                  => $post_type['name'],
						'singular_name'         => $post_type['singular_name'],
						'menu_name'             => $post_type['menu_name'],
						'name_admin_bar'        => $post_type['name_admin_bar'],
						'archives'              => $post_type['archives'],
						'attributes'            => $post_type['attributes'],
						'parent_item_colon'     => $post_type['parent_item_colon'],
						'all_items'             => $post_type['all_items'],
						'add_new_item'          => $post_type['add_new_item'],
						'add_new'               => $post_type['add_new'],
						'new_item'              => $post_type['new_item'],
						'edit_item'             => $post_type['edit_item'],
						'update_item'           => $post_type['update_item'],
						'view_item'             => $post_type['view_item'],
						'view_items'            => $post_type['view_items'],
						'search_items'          => $post_type['search_items'],
						'not_found'             => $post_type['not_found'],
						'not_found_in_trash'    => $post_type['not_found_in_trash'],
						'featured_image'        => $post_type['featured_image'],
						'set_featured_image'    => $post_type['set_featured_image'],
						'remove_featured_image' => $post_type['remove_featured_image'],
						'use_featured_image'    => $post_type['use_featured_image'],
						'insert_into_item'      => $post_type['insert_into_item'],
						'uploaded_to_this_item' => $post_type['uploaded_to_this_item'],
						'items_list'            => $post_type['items_list'],
						'items_list_navigation' => $post_type['items_list_navigation'],
						'filter_items_list'     => $post_type['filter_items_list']
					),
					'label'                     => $post_type['label'],
					'description'               => $post_type['description'],
					'supports'                  => $post_type['supports'],
					'taxonomies'                => $post_type['taxonomies'],
					'hierarchical'              => $post_type['hierarchical'],
					'public'                    => $post_type['public'],
					'show_ui'                   => $post_type['show_ui'],
					'show_in_menu'              => $post_type['show_in_menu'],
                    'menu_position'             => $post_type['menu_position'],
                    'menu_icon'                 => $post_type['menu_icon'],
					'show_in_admin_bar'         => $post_type['show_in_admin_bar'],
					'show_in_nav_menus'         => $post_type['show_in_nav_menus'],
					'can_export'                => $post_type['can_export'],
					'has_archive'               => $post_type['has_archive'],
					'exclude_from_search'       => $post_type['exclude_from_search'],
                    'publicly_queryable'        => $post_type['publicly_queryable'],
                    'query_var'                 => $post_type['query_var'],
                    'rewrite'                   => $post_type['rewrite'],
					'capability_type'           => $post_type['capability_type']
				)
			);
		
		}

	}
}
